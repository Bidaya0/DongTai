#!/usr/bin/env python
# -*- coding:utf-8 -*-
# author:owefsad
# datetime:2021/1/13 下午6:47
# software: PyCharm
# project: lingzhi-agent-server
from django.http import JsonResponse

from apiserver.base.openapi import OpenApiEndPoint
from apiserver.models.hook_strategy import IastHookStrategy
from apiserver.models.hook_strategy_type import IastHookStrategyType
from apiserver.models.hook_strategy_type_relation import IastHookStrategyTypeRelation


class HookProfileInitEndPoint(OpenApiEndPoint):
    authentication_classes = []
    permission_classes = []

    def get(self, request):
        import time

        strategys = [{"enable": 0, "value": "HttpRequest", "type": 5}, {"enable": 1, "value": "String", "type": 1},
                     {"enable": 1, "value": "StringBuilder", "type": 1}, {"enable": 1, "value": "List", "type": 1},
                     {"enable": 1, "value": "Map", "type": 1}, {"enable": 1, "value": "Enumeration", "type": 1},
                     {"enable": 1, "value": "io", "type": 1}, {"enable": 1, "value": "URI", "type": 1},
                     {"enable": 1, "value": "URL", "type": 1}, {"enable": 1, "value": "URLDecoder", "type": 1},
                     {"enable": 0, "value": "RequestFacade", "type": 1}, {"enable": 1, "value": "Cookie", "type": 1},
                     {"enable": 1, "value": "ProcessBuilder", "type": 1},
                     {"enable": 1, "value": "base64-dec", "type": 1},
                     {"enable": 1, "value": "base64-enc", "type": 1}, {"enable": 1, "value": "owasp-esapi", "type": 1},
                     {"enable": 1, "value": "apache-filter", "type": 1}, {"enable": 1, "value": "javax", "type": 1},
                     {"enable": 1, "value": "xml.sax", "type": 1}, {"enable": 1, "value": "spring", "type": 1},
                     {"enable": 1, "value": "httpclient", "type": 1}, {"enable": 1, "value": "httpclient5", "type": 1},
                     {"enable": 1, "value": "okhttp", "type": 1}, {"enable": 1, "value": "okhttp3", "type": 1},
                     {"enable": 1, "value": "spel", "type": 1}, {"enable": 1, "value": "ognl", "type": 1},
                     {"enable": 1, "value": "lambda-function", "type": 1},
                     {"enable": 1, "value": "servelt-stream", "type": 1}, {"enable": 1, "value": "jdbc", "type": 1},
                     {"enable": 1, "value": "smtp-injection", "type": 4}, {"enable": 1, "value": "ssrf", "type": 4},
                     {"enable": 1, "value": "unsafe-xml-decode", "type": 4},
                     {"enable": 1, "value": "cmd-injection", "type": 4},
                     {"enable": 1, "value": "sql-injection", "type": 4},
                     {"enable": 1, "value": "ldap-injection", "type": 4},
                     {"enable": 1, "value": "xpath-injection", "type": 4},
                     {"enable": 1, "value": "path-traversal", "type": 4},
                     {"enable": 1, "value": "crypto-weak-randomness", "type": 4},
                     {"enable": 1, "value": "crypto-bad-mac", "type": 4},
                     {"enable": 1, "value": "crypto-bad-ciphers", "type": 4},
                     {"enable": 1, "value": "cookie-flags-missing", "type": 4},
                     {"enable": 1, "value": "trust-boundary-violation", "type": 4},
                     {"enable": 0, "value": "reflected-xss", "type": 4}, {"enable": 1, "value": "xxe", "type": 4},
                     {"enable": 1, "value": "expression-language-injection", "type": 4},
                     {"enable": 1, "value": "redos", "type": 4},
                     {"enable": 1, "value": "reflection-injection", "type": 4},
                     {"enable": 1, "value": "unsafe-json-deserialize", "type": 4},
                     {"enable": 1, "value": "hql-injection", "type": 4},
                     {"enable": 1, "value": "nosql-injection", "type": 4},
                     {"enable": 1, "value": "unsafe-readline", "type": 4},
                     {"enable": 1, "value": "unvalidated-forward", "type": 4},
                     {"enable": 1, "value": "unvalidated-redirect", "type": 4},
                     {"enable": 0, "value": "header-injection", "type": 4},
                     {"enable": 1, "value": "dynamic-library-load", "type": 4},
                     {"enable": 1, "value": "spring-cloud-config-server", "type": 4},
                     {"enable": 1, "value": "sql-over-power", "type": 4},
                     {"enable": 1, "value": "reflected-xss-filter", "type": 3},
                     {"enable": 1, "value": "xxe-filter", "type": 3}]
        strategys = [{"details": [{"source": "", "track": "", "target": "",
                                   "value": "javax.servlet.Filter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
                                   "inherit": "true"}, {"source": "", "track": "", "target": "",
                                                        "value": "javax.servlet.http.HttpServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
                                                        "inherit": "true"}, {"source": "", "track": "", "target": "",
                                                                             "value": "javax.servlet.jsp.JspPage._jspService(javax.servlet.ServletRequest, javax.servlet.ServletResponse)",
                                                                             "inherit": "true"}], "enable": 0,
                      "value": "HttpRequest", "type": 5}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(java.lang.String)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(java.lang.StringBuffer)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(java.lang.StringBuilder)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(byte[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(byte[],int,int)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(byte[],int,int,int)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.lang.String.<init>(byte[],int,int,java.nio.charset.Charset)",
                                   "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                                         "value": "java.lang.String.<init>(byte[],int,int,java.lang.String)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(char[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(char[],int,int)",
             "inherit": "false"}, {"source": "P2", "track": "", "target": "O",
                                   "value": "java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)",
                                   "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.toLowerCase(java.util.Locale)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.toUpperCase(java.util.Locale)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.getBytes()", "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.getBytes(java.lang.String)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "java.lang.String.getBytes(java.nio.charset.Charset)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "P3", "value": "java.lang.String.getBytes(int,int,byte[],int)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "P3", "value": "java.lang.String.getChars(int,int,char[],int)",
             "inherit": "false"},
            {"source": "O|P1", "track": "", "target": "R", "value": "java.lang.String.concat(java.lang.String)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.substring(int,int)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.substring(int)", "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.toCharArray()", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.String.<init>(char[],int,int,boolean)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.split(java.lang.String)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.String.split(java.lang.String, int)",
             "inherit": "false"}], "enable": 1, "value": "String", "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "R",
             "value": "java.lang.StringBuilder.replace(int,int,java.lang.String)", "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.lang.StringBuilder.toString()",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.StringBuilder.<init>(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.lang.StringBuilder.<init>(java.lang.CharSequence)",
                                   "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.StringBuilder.append(java.lang.Object)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.StringBuilder.append(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.lang.StringBuilder.append(java.lang.StringBuffer)",
                                   "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                                         "value": "java.lang.StringBuilder.append(java.lang.CharSequence)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "java.lang.StringBuilder.append(java.lang.CharSequence,int,int)", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.StringBuilder.append(char[],int,int)",
             "inherit": "false"}], "enable": 1, "value": "StringBuilder", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.util.List.<init>(java.util.Collection)",
             "inherit": "true"},
            {"source": "P2", "track": "", "target": "O", "value": "java.util.List.add(int,java.lang.Object)",
             "inherit": "true"},
            {"source": "P1", "track": "", "target": "O", "value": "java.util.List.add(java.lang.Object)",
             "inherit": "true"},
            {"source": "P2", "track": "", "target": "P2", "value": "java.util.List.addAll(int,java.util.Collection)",
             "inherit": "true"},
            {"source": "P1", "track": "", "target": "O", "value": "java.util.List.addAll(java.util.Collection)",
             "inherit": "true"},
            {"source": "P2", "track": "", "target": "O", "value": "java.util.List.set(int,java.lang.Object)",
             "inherit": "true"},
            {"source": "O&R", "track": "", "target": "R", "value": "java.util.List.get(int)", "inherit": "true"},
            {"source": "O", "track": "", "target": "R", "value": "java.util.List.clone()", "inherit": "true"},
            {"source": "O", "track": "", "target": "R", "value": "java.util.List.toArray()", "inherit": "true"},
            {"source": "O", "track": "", "target": "R", "value": "java.util.List.toArray(java.lang.Object[])",
             "inherit": "true"}], "enable": 1, "value": "List", "type": 1}, {"details": [
            {"source": "O&R", "track": "", "target": "R", "value": "java.util.Map.get(java.lang.Object)",
             "inherit": "true"}, {"source": "O&R", "track": "", "target": "R",
                                  "value": "java.util.Map.getOrDefault(java.lang.Object,java.lang.Object)",
                                  "inherit": "true"}, {"source": "P1,2", "track": "", "target": "O",
                                                       "value": "java.util.Map.put(java.lang.Object,java.lang.Object)",
                                                       "inherit": "true"},
            {"source": "P1", "track": "", "target": "O", "value": "java.util.Map.putAll(java.util.Map)",
             "inherit": "true"}, {"source": "P1,2", "track": "", "target": "O",
                                  "value": "java.util.Map.putIfAbsent(java.lang.Object,java.lang.Object)",
                                  "inherit": "true"}], "enable": 1, "value": "Map", "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "R", "value": "java.util.Enumeration.nextElement()",
             "inherit": "true"}], "enable": 1, "value": "Enumeration", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.net.Socket.<init>(java.lang.String,int)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.net.Socket.getOutputStream()",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.BufferedReader.<init>(java.io.Reader)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.BufferedReader.<init>(java.io.Reader,int)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.BufferedReader.<init>(java.io.FileReader)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.io.BufferedReader.<init>(java.io.InputStreamReader)",
                                   "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.io.BufferedReader.readLine()",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.io.InputStreamReader.<init>(java.io.InputStream)",
                                   "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                                         "value": "java.io.InputStreamReader.<init>(java.io.InputStream,java.nio.charset.Charset)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.StringReader.<init>(java.lang.String)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.FileInputStream.<init>(java.io.File)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.FileInputStream.<init>(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.io.InputStreamReader.<init>(java.io.InputStream)",
                                   "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.FileReader.<init>(java.io.File)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "P1", "value": "java.io.InputStreamReader.read(char[],int,int)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.ByteArrayInputStream.<init>(byte[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.ByteArrayInputStream.<init>(byte[],int,int)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "P1", "value": "java.io.InputStream.read(byte[],int,int)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.io.PushbackInputStream.<init>(java.io.InputStream,int)",
                                   "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.InputStream.<init>(java.io.InputStream)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "java.io.ObjectInputStream.<init>(java.io.InputStream)", "inherit": "all"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.CharArrayReader.<init>(char[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.CharArrayReader.<init>(char[],int,int)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "P1", "value": "java.io.CharArrayReader.read(char[],int,int)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.ByteArrayOutputStream.write(byte[],int,int)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.io.ByteArrayOutputStream.toByteArray()",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "O", "value": "java.io.ByteArrayOutputStream.reset()",
             "inherit": "false"}], "enable": 1, "value": "io", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.net.URI.<init>(java.lang.String)",
             "inherit": "false"}, {"source": "P1,2,3", "track": "", "target": "O",
                                   "value": "java.net.URI.<init>(java.lang.String,java.lang.String,java.lang.String)",
                                   "inherit": "false"}, {"source": "P2,3,4,5", "track": "", "target": "O",
                                                         "value": "java.net.URI.<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                                         "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "java.net.URI.toURL()", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "org.apache.commons.httpclient.URI.parseUriReference(java.lang.String, boolean)",
             "inherit": "false"}], "enable": 1, "value": "URI", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.net.URL.<init>(java.lang.String)",
             "inherit": "false"}, {"source": "P1,2,4", "track": "", "target": "O",
                                   "value": "java.net.URL.<init>(java.lang.String,java.lang.String,int,java.lang.String)",
                                   "inherit": "false"}, {"source": "P1,2,4", "track": "", "target": "O",
                                                         "value": "java.net.URL.<init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler)",
                                                         "inherit": "false"},
            {"source": "P1,2,3", "track": "", "target": "O",
             "value": "java.net.URL.<init>(java.lang.String,java.lang.String,java.lang.String)", "inherit": "false"},
            {"source": "P1,2", "track": "", "target": "O",
             "value": "java.net.URL.<init>(java.net.URL,java.lang.String)", "inherit": "false"}], "enable": 1,
                         "value": "URL", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R",
             "value": "java.net.URLDecoder.decode(java.lang.String,java.lang.String)", "inherit": "false"}],
                         "enable": 1,
                         "value": "URLDecoder",
                         "type": 1}, {
                         "details": [{"source": "O", "track": "", "target": "R",
                                      "value": "javax.servlet.ServletRequest.getParameterNames()", "inherit": "true"},
                                     {"source": "O", "track": "", "target": "R",
                                      "value": "javax.servlet.ServletRequest.getParameterValues(java.lang.String)",
                                      "inherit": "true"}], "enable": 0, "value": "RequestFacade", "type": 1}, {
                         "details": [{"source": "O", "track": "", "target": "R",
                                      "value": "javax.servlet.http.Cookie.getValue()", "inherit": "false"},
                                     {"source": "P1,2", "track": "", "target": "O",
                                      "value": "javax.servlet.http.Cookie.<init>(java.lang.String,java.lang.String)",
                                      "inherit": "false"}], "enable": 1, "value": "Cookie", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O",
             "value": "java.lang.ProcessBuilder.command(java.lang.String[])", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.ProcessBuilder.command(java.util.List)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.ProcessBuilder.<init>(java.lang.String[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "java.lang.ProcessBuilder.<init>(java.util.List)",
             "inherit": "false"}], "enable": 1, "value": "ProcessBuilder", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R", "value": "java.util.Base64$Decoder.decode(byte[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "java.util.Base64$Decoder.decode(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "java.util.Base64$Decoder.decode(java.nio.ByteBuffer)", "inherit": "false"},
            {"source": "P1", "track": "", "target": "P2", "value": "java.util.Base64$Decoder.decode(byte[],byte[])",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "org.apache.commons.codec.binary.Base64.decodeBase64(java.lang.String)",
                                   "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                                        "value": "org.apache.commons.codec.binary.Base64.decodeBase64(byte[])",
                                                        "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                                                             "value": "org.apache.commons.codec.binary.Base64.decodeInteger(byte[])",
                                                                             "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.Object)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.BaseNCodec.decode(byte[])", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.BaseNCodec.decode(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)",
             "inherit": "true"}], "enable": 1, "value": "base64-dec", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R", "value": "java.util.Base64$Encoder.encode(byte[])",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "java.util.Base64$Encoder.encodeToString(byte[])",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "java.util.Base64$Encoder.encode(java.nio.ByteBuffer)", "inherit": "false"},
            {"source": "P1", "track": "", "target": "P2", "value": "java.util.Base64$Encoder.encode(byte[],byte[])",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "org.apache.commons.codec.binary.BaseNCodec.encode(byte[])",
                                   "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                                        "value": "org.apache.commons.codec.binary.BaseNCodec.encode(byte[],int,int)",
                                                        "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                                                             "value": "org.apache.commons.codec.binary.BaseNCodec.encode(java.lang.Object)",
                                                                             "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.BaseNCodec.encodeAsString(byte[])", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.BaseNCodec.encodeToString(byte[])", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.Base64.encodeBase64(byte[])", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)",
             "inherit": "true"}], "enable": 1, "value": "base64-enc", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R",
             "value": "org.owasp.esapi.reference.DefaultEncoder.encodeForHTML(java.lang.String)", "inherit": "true"}],
                         "enable": 1, "value": "owasp-esapi",
                         "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R",
             "value": "org.apache.commons.lang.StringEscapeUtils.escapeHtml(java.lang.String)", "inherit": "false"},
            {"source": "P2", "track": "", "target": "R",
             "value": "org.apache.commons.lang.StringEscapeUtils.escapeHtml(java.io.Writer,java.lang.String)",
             "inherit": "false"}], "enable": 1, "value": "apache-filter", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O",
             "value": "javax.xml.transform.stream.StreamSource.<init>(java.io.File)", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "javax.xml.transform.stream.StreamSource.<init>(java.io.Reader)", "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "javax.xml.transform.stream.StreamSource.<init>(java.io.Reader,java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "javax.xml.transform.stream.StreamSource.<init>(java.io.InputStream)",
                                   "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                                         "value": "javax.xml.transform.stream.StreamSource.<init>(java.io.InputStream,java.lang.String)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.Reader)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(javax.xml.transform.Source)",
             "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                  "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.InputStream)",
                                  "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                                       "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.io.InputStream,java.lang.String)",
                                                       "inherit": "true"}, {"source": "P2", "track": "", "target": "R",
                                                                            "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.lang.String,java.io.InputStream)",
                                                                            "inherit": "true"},
            {"source": "P2", "track": "", "target": "R",
             "value": "javax.xml.stream.XMLInputFactory.createXMLStreamReader(java.lang.String,java.io.Reader)",
             "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                  "value": "javax.xml.bind.Unmarshaller.unmarshal(java.io.Reader)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.bind.Unmarshaller.unmarshal(java.io.InputStream)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.bind.Unmarshaller.unmarshal(org.xml.sax.InputSource)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "R",
             "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source,java.lang.Class)",
             "inherit": "true"},
            {"source": "O", "track": "", "target": "R", "value": "javax.xml.bind.JAXBElement.getValue()",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "javax.xml.transform.sax.SAXSource.<init>(org.xml.sax.InputSource)",
                                   "inherit": "false"}, {"source": "P2", "track": "", "target": "O",
                                                         "value": "javax.xml.transform.sax.SAXSource.<init>(org.xml.sax.XMLReader,org.xml.sax.InputSource)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "javax.xml.transform.sax.SAXSource.setInputSource(org.xml.sax.InputSource)", "inherit": "false"}],
                         "enable": 1, "value": "javax",
                         "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "org.xml.sax.InputSource.<init>(java.lang.String)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "org.xml.sax.InputSource.<init>(java.io.InputStream)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "org.xml.sax.InputSource.<init>(java.io.Reader)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "org.xml.sax.InputSource.setCharacterStream(java.io.Reader)",
                                   "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "org.xml.sax.InputSource.getCharacterStream()",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "org.xml.sax.InputSource.setByteStream(java.io.InputStream)",
                                   "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "org.xml.sax.InputSource.getByteStream()",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "org.xml.sax.InputSource.setSystemId(java.lang.String", "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "org.xml.sax.InputSource.getSystemId()",
             "inherit": "false"}], "enable": 1, "value": "xml.sax", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R",
             "value": "org.springframework.web.util.HtmlUtils.htmlEscape(java.lang.String)", "inherit": "false"},
            {"source": "P1,2,3,4", "track": "", "target": "R",
             "value": "org.springframework.cloud.config.server.resource.ResourceController.retrieve(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
             "inherit": "false"}, {"source": "P1,2,3,4", "track": "", "target": "R",
                                   "value": "org.springframework.cloud.config.server.resource.GenericResourceRepository.findOne(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
                                   "inherit": "false"}, {"source": "P1,2,3", "track": "", "target": "R",
                                                         "value": "org.springframework.cloud.config.server.environment.MultipleJGitEnvironmentRepository.getLocations(java.lang.String,java.lang.String,java.lang.String)",
                                                         "inherit": "false"}], "enable": 1, "value": "spring",
                         "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O",
             "value": "org.apache.hc.core5.http.message.BasicHttpRequest.setUri(java.net.URI)", "inherit": "true"},
            {"source": "P1", "track": "", "target": "O",
             "value": "org.apache.hc.core.http.message.BasicHttpRequest.setUri(java.net.URI)", "inherit": "true"}],
                         "enable": 1,
                         "value": "httpclient",
                         "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O",
             "value": "org.apache.hc.client5.http.classic.methods.HttpGet.<init>(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                   "value": "org.apache.hc.client5.http.classic.methods.HttpGet.<init>(java.net.URI)",
                                   "inherit": "false"}, {"source": "P1", "track": "", "target": "O",
                                                         "value": "org.apache.hc.core5.http.HttpHost.<init>(java.lang.String,int)",
                                                         "inherit": "false"},
            {"source": "P1", "track": "", "target": "O",
             "value": "org.apache.hc.core5.http.HttpHost.<init>(java.lang.String,java.lang.String)",
             "inherit": "false"}], "enable": 1, "value": "httpclient5", "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "R", "value": "com.squareup.okhttp.Request$Builder.build()",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "com.squareup.okhttp.Request$Builder.url(com.squareup.okhttp.HttpUrl)",
                                   "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "com.squareup.okhttp.HttpUrl.parse(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "", "target": "R",
                                   "value": "com.squareup.okhttp.OkHttpClient.newCall(com.squareup.okhttp.Request)",
                                   "inherit": "false"}], "enable": 1, "value": "okhttp", "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "R", "value": "okhttp3.Request$Builder.build()", "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "okhttp3.Request$Builder.url(okhttp3.HttpUrl)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "okhttp3.HttpUrl.get(java.lang.String)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "R", "value": "okhttp3.Call$Factory.newCall(okhttp3.Request)",
             "inherit": "true"}], "enable": 1, "value": "okhttp3", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R",
             "value": "org.springframework.expression.ExpressionParser.parseExpression(java.lang.String,org.springframework.expression.ParserContext)",
             "inherit": "true"}, {"source": "P1", "track": "", "target": "R",
                                  "value": "org.springframework.expression.ExpressionParser.parseExpression(java.lang.String)",
                                  "inherit": "true"}], "enable": 1, "value": "spel", "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "R", "value": "ognl.Ognl.parseExpression(java.lang.String)",
             "inherit": "true"},
            {"source": "P1", "track": "", "target": "O", "value": "ognl.OgnlParser.<init>(java.io.Reader)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "ognl.OgnlParser.<init>(java.io.InputStream)",
             "inherit": "false"},
            {"source": "P1", "track": "", "target": "O", "value": "ognl.OgnlParser.<init>(ognl.OgnlParserTokenManager)",
             "inherit": "false"},
            {"source": "O", "track": "", "target": "R", "value": "ognl.OgnlParser.topLevelExpression()",
             "inherit": "false"}], "enable": 1, "value": "ognl", "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "P1",
             "value": "java.util.function.BiConsumer.accept(java.lang.Object,java.lang.Object", "inherit": "true"}],
                         "enable": 1, "value": "lambda-function",
                         "type": 1}, {"details": [
            {"source": "O", "track": "", "target": "P1",
             "value": "org.apache.catalina.connector.CoyoteInputStream.read(byte[])", "inherit": "false"},
            {"source": "O", "track": "", "target": "P1",
             "value": "org.apache.catalina.connector.CoyoteInputStream.read(byte[],int,int)", "inherit": "false"},
            {"source": "O", "track": "", "target": "P1",
             "value": "org.apache.catalina.connector.CoyoteInputStream.read(java.nio.ByteBuffer)", "inherit": "false"}],
                         "enable": 1,
                         "value": "servelt-stream",
                         "type": 1}, {"details": [
            {"source": "P1", "track": "", "target": "O", "value": "java.sql.Connection.nativeSQL(java.lang.String)",
             "inherit": "true"}], "enable": 1, "value": "jdbc", "type": 1}, {"details": [
            {"source": "P1", "track": "true", "target": "", "value": "javax.mail.Message.setFrom(javax.mail.Address)",
             "inherit": "all"}, {"source": "P1,2", "track": "true", "target": "",
                                 "value": "javax.mail.Message.setHeader(java.lang.String,java.lang.String)",
                                 "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                     "value": "javax.mail.Message.setRecipient(javax.mail.Message.RecipientType,javax.mail.Address)",
                                                     "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                                         "value": "javax.mail.internet.MimeMessage.setRecipients(javax.mail.Message.RecipientType,java.lang.String)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "", "value": "javax.mail.Message.setSubject(java.lang.String)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "javax.mail.internet.MimeMessage.setSubject(java.lang.String,java.lang.String)",
                                 "inherit": "all"},
            {"source": "P1", "track": "true", "target": "", "value": "javax.mail.Part.setText(java.lang.String)",
             "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                 "value": "javax.mail.internet.MimeBodyPart.setText(javax.mail.internet.MimePart,java.lang.String,java.lang.String,java.lang.String)",
                                 "inherit": "all"}, {"source": "P1,2", "track": "true", "target": "",
                                                     "value": "javax.mail.internet.InternetHeaders.setHeader(java.lang.String,java.lang.String)",
                                                     "inherit": "all"},
            {"source": "P1,2", "track": "true", "target": "",
             "value": "javax.mail.internet.InternetHeaders.addHeader(java.lang.String,java.lang.String)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "javax.mail.internet.InternetHeaders.addHeaderLine(java.lang.String)",
                                 "inherit": "all"}], "enable": 1, "value": "smtp-injection", "type": 4}, {"details": [
            {"source": "O", "track": "true", "target": "", "value": "java.net.URL.openConnection()", "inherit": "all"},
            {"source": "O", "track": "true", "target": "", "value": "java.net.URL.openConnection(java.net.Proxy)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "org.apache.http.client.methods.HttpRequestBase.setURI(java.net.URI)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "org.apache.commons.httpclient.HttpMethodBase.<init>(java.lang.String)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.apache.commons.httpclient.HttpMethodBase.setURI(java.net.URI)",
                                                                         "inherit": "all"},
            {"source": "P2", "track": "true", "target": "",
             "value": "org.apache.hc.client5.http.impl.classic.CloseableHttpClient.doExecute(org.apache.hc.core5.http.HttpHost,org.apache.hc.core5.http.ClassicHttpRequest,org.apache.hc.core5.http.protocol.HttpContext)",
             "inherit": "all"},
            {"source": "O", "track": "true", "target": "", "value": "com.squareup.okhttp.Call.execute()",
             "inherit": "false"}, {"source": "O", "track": "true", "target": "",
                                   "value": "com.squareup.okhttp.Call.enqueue(com.squareup.okhttp.Callback)",
                                   "inherit": "false"},
            {"source": "O", "track": "true", "target": "", "value": "okhttp3.Call.execute()", "inherit": "all"},
            {"source": "O", "track": "true", "target": "", "value": "okhttp3.Call.enqueue(okhttp3.Callback)",
             "inherit": "all"}], "enable": 1, "value": "ssrf", "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "java.beans.XMLDecoder.<init>(org.xml.sax.InputSource)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.beans.XMLDecoder.<init>(java.io.InputStream)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.beans.XMLDecoder.<init>(java.io.InputStream,java.lang.Object)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.beans.XMLDecoder.<init>(java.io.InputStream,java.lang.Object,java.beans.ExceptionListener)",
             "inherit": "all"}], "enable": 1, "value": "unsafe-xml-decode", "type": 4}, {"details": [
            {"source": "P1,2", "track": "true", "target": "",
             "value": "java.lang.ProcessImpl.start(java.lang.String[],java.util.Map,java.lang.String,java.lang.ProcessBuilder$Redirect[],boolean)",
             "inherit": "false"},
            {"source": "O", "track": "true", "target": "", "value": "java.lang.ProcessBuilder.start()",
             "inherit": "false"}, {"source": "P1,2", "track": "true", "target": "",
                                   "value": "java.lang.Runtime.exec(java.lang.String[],java.lang.String[])",
                                   "inherit": "false"},
            {"source": "P1", "track": "true", "target": "", "value": "java.lang.Runtime.exec(java.lang.String[])",
             "inherit": "false"},
            {"source": "P1", "track": "true", "target": "", "value": "java.lang.Runtime.exec(java.lang.String)",
             "inherit": "false"}, {"source": "P1,2", "track": "true", "target": "",
                                   "value": "java.lang.Runtime.exec(java.lang.String[],java.lang.String[],java.io.File)",
                                   "inherit": "false"}, {"source": "P1,2", "track": "true", "target": "",
                                                         "value": "java.lang.Runtime.exec(java.lang.String,java.lang.String[],java.io.File)",
                                                         "inherit": "false"},
            {"source": "P1,2", "track": "true", "target": "",
             "value": "java.lang.Runtime.exec(java.lang.String,java.lang.String[])", "inherit": "false"}], "enable": 1,
                         "value": "cmd-injection",
                         "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "", "value": "java.sql.Statement.addBatch(java.lang.String)",
             "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "java.sql.Statement.execute(java.lang.String)",
             "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "java.sql.Statement.execute(java.lang.String,int)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "java.sql.Statement.execute(java.lang.String,int[])", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.execute(java.lang.String,java.lang.String[])", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.executeQuery(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.executeUpdate(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.executeUpdate(java.lang.String,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.executeUpdate(java.lang.String,int[])", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Statement.executeUpdate(java.lang.String,java.lang.String[])", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareCall(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareCall(java.lang.String,int,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareCall(java.lang.String,int,int,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String,int,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String,int,int,int)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String,int[])", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "java.sql.Connection.prepareStatement(java.lang.String,java.lang.String[])", "inherit": "true"}],
                         "enable": 1,
                         "value": "sql-injection",
                         "type": 4}, {
                         "details": [{"source": "P2", "track": "true", "target": "",
                                      "value": "javax.naming.directory.DirContext.search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)",
                                      "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                          "value": "javax.naming.directory.DirContext.search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)",
                                                          "inherit": "all"},
                                     {"source": "P2", "track": "true", "target": "",
                                      "value": "javax.naming.directory.DirContext.search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls",
                                      "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                          "value": "javax.naming.directory.InitialDirContext.search(java.lang.String,java.lang.String,java.lang.Object[],javax.naming.directory.SearchControls)",
                                                          "inherit": "all"},
                                     {"source": "P2", "track": "true", "target": "",
                                      "value": "javax.naming.directory.InitialDirContext.search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls)",
                                      "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                          "value": "javax.naming.directory.InitialDirContext.search(java.lang.String,java.lang.String,javax.naming.directory.SearchControls",
                                                          "inherit": "all"}], "enable": 1, "value": "ldap-injection",
                         "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "", "value": "javax.xml.xpath.XPath.compile(java.lang.String)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "javax.xml.xpath.XPath.evaluate(java.lang.String,org.xml.sax.InputSource)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "javax.xml.xpath.XPath.evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "javax.xml.xpath.XPath.evaluate(java.lang.String,java.lang.Object)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "javax.xml.xpath.XPath.evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)",
             "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                 "value": "javax.xml.xpath.XPath.eval(org.w3c.dom.Node,java.lang.String)",
                                 "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                     "value": "org.apache.xpath.XPathAPI.eval(org.w3c.dom.Node,java.lang.String)",
                                                     "inherit": "all"}, {"source": "P2", "track": "true", "target": "",
                                                                         "value": "org.apache.xpath.XPathAPI.eval(org.w3c.dom.Node,java.lang.String,org.w3c.dom.Node)",
                                                                         "inherit": "all"},
            {"source": "P2", "track": "true", "target": "",
             "value": "org.apache.xpath.XPathAPI.eval(org.w3c.dom.Node,java.lang.String,org.apache.xml.utils.PrefixResolver)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "net.sf.saxon.s9api.XPathCompiler.compile(java.lang.String)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.eval(java.lang.String,java.lang.Object)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.evaluate(java.lang.String,java.lang.Object)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.compile(java.lang.String)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "com.sun.org.apache.xpath.internal.jaxp.XPathImpl.evaluate(java.lang.String,org.xml.sax.InputSource)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.apache.xpath.jaxp.XPathImpl.eval(java.lang.String,java.lang.Object)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.apache.xpath.jaxp.XPathImpl.evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "org.apache.xpath.jaxp.XPathImpl.evaluate(java.lang.String,java.lang.Object)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "org.apache.xpath.jaxp.XPathImpl.compile(java.lang.String)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.apache.xpath.jaxp.XPathImpl.evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.apache.xpath.jaxp.XPathImpl.evaluate(java.lang.String,org.xml.sax.InputSource)",
             "inherit": "all"}], "enable": 1, "value": "xpath-injection", "type": 4}, {"details": [
            {"source": "P1,2", "track": "true", "target": "",
             "value": "java.nio.file.Paths.get(java.lang.String,java.lang.String[])", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "", "value": "java.nio.file.Paths.get(java.net.URI)",
             "inherit": "all"},
            {"source": "P1", "track": "true", "target": "", "value": "java.io.File.<init>(java.lang.String)",
             "inherit": "all"}, {"source": "P1,2", "track": "true", "target": "",
                                 "value": "java.io.File.<init>(java.lang.String,java.lang.String)", "inherit": "all"},
            {"source": "P2", "track": "true", "target": "",
             "value": "java.io.File.<init>(java.io.File,java.lang.String)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "", "value": "java.io.File.<init>(java.net.URI)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "java.io.RandomAccessFile.<init>(java.lang.String,java.lang.String)",
                                 "inherit": "all"}], "enable": 1, "value": "path-traversal", "type": 4}, {"details": [
            {"source": "", "track": "false", "target": "", "value": "java.lang.Math.random()", "inherit": "false"},
            {"source": "", "track": "false", "target": "",
             "value": "org.apache.commons.lang.RandomStringUtils.random(int,int,int,boolean,boolean,char[])",
             "inherit": "false"}, {"source": "", "track": "false", "target": "",
                                   "value": "org.apache.commons.lang.RandomStringUtils.random(int,int,int,boolean,boolean)",
                                   "inherit": "false"}, {"source": "", "track": "false", "target": "",
                                                         "value": "org.apache.commons.lang.RandomStringUtils.randomAlphabetic(int)",
                                                         "inherit": "false"},
            {"source": "", "track": "false", "target": "",
             "value": "org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(int)", "inherit": "false"},
            {"source": "", "track": "false", "target": "",
             "value": "org.apache.commons.lang.RandomStringUtils.randomAscii(int)", "inherit": "false"},
            {"source": "", "track": "false", "target": "",
             "value": "org.apache.commons.lang.RandomStringUtils.randomNumeric(int)", "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextInt(int)",
             "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextBoolean()",
             "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextDouble()",
             "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextFloat()", "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextGaussian()",
             "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextInt()", "inherit": "false"},
            {"source": "", "track": "false", "target": "", "value": "java.util.Random.nextLong()", "inherit": "false"}],
                         "enable": 1,
                         "value": "crypto-weak-randomness",
                         "type": 4}, {
                         "details": [{"source": "P1", "track": "false", "target": "",
                                      "value": "java.security.MessageDigest.getInstance(java.lang.String)",
                                      "inherit": "false"}, {"source": "P1", "track": "false", "target": "",
                                                            "value": "java.security.MessageDigest.getInstance(java.lang.String,java.security.Provider)",
                                                            "inherit": "false"},
                                     {"source": "P1", "track": "false", "target": "",
                                      "value": "java.security.MessageDigest.getInstance(java.lang.String,java.lang.String)",
                                      "inherit": "false"}], "enable": 1, "value": "crypto-bad-mac", "type": 4}, {
                         "details": [{"source": "P1", "track": "false", "target": "",
                                      "value": "javax.crypto.Cipher.getInstance(java.lang.String)", "inherit": "false"},
                                     {"source": "P1", "track": "false", "target": "",
                                      "value": "javax.crypto.Cipher.getInstance(java.lang.String,java.security.Provider)",
                                      "inherit": "false"}, {"source": "P1", "track": "false", "target": "",
                                                            "value": "javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)",
                                                            "inherit": "false"}], "enable": 1,
                         "value": "crypto-bad-ciphers", "type": 4}, {"details": [
            {"source": "P1", "track": "false", "target": "", "value": "javax.servlet.http.Cookie.setSecure(boolean)",
             "inherit": "true"}, {"source": "P1", "track": "false", "target": "",
                                  "value": "org.glassfish.grizzly.http.Cookie.setSecure(boolean)", "inherit": "false"},
            {"source": "P9", "track": "false", "target": "",
             "value": "javax.ws.rs.core.NewCookie.<init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,java.util.Date,boolean,boolean)",
             "inherit": "false"}, {"source": "P5", "track": "false", "target": "",
                                   "value": "javax.ws.rs.core.NewCookie.<init>(javax.ws.rs.core.Cookie,java.lang.String,int,java.util.Date,boolean,boolean)",
                                   "inherit": "false"}], "enable": 1, "value": "cookie-flags-missing", "type": 4}, {
                         "details": [{"source": "P1,2", "track": "true", "target": "",
                                      "value": "javax.servlet.http.HttpSession.setAttribute(java.lang.String,java.lang.Object)",
                                      "inherit": "true"}, {"source": "P1,2", "track": "true", "target": "",
                                                           "value": "javax.servlet.http.HttpSession.putValue(java.lang.String,java.lang.Object)",
                                                           "inherit": "true"},
                                     {"source": "P1,2", "track": "true", "target": "",
                                      "value": "org.apache.struts2.dispatcher.SessionMap.put(java.lang.Object,java.lang.Object)",
                                      "inherit": "false"}, {"source": "P1,2", "track": "true", "target": "",
                                                            "value": "coldfusion.runtime.SessionScope.bind(java.lang.String,java.lang.Object)",
                                                            "inherit": "false"},
                                     {"source": "P1,2", "track": "true", "target": "",
                                      "value": "play.mvc.Http$Session.put(java.lang.String,java.lang.String)",
                                      "inherit": "false"}], "enable": 1, "value": "trust-boundary-violation",
                         "type": 4}, {"details": [{"source": "P1", "track": "true", "target": "",
                                                   "value": "org.springframework.http.converter.StringHttpMessageConverter.writeInternal(java.lang.String,org.springframework.http.HttpOutputMessage)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "play.twirl.api.Html$.apply(java.lang.String)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.glassfish.jersey.message.internal.ByteArrayProvider.writeTo(byte[],java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.glassfish.jersey.message.internal.DataSourceProvider.writeTo(javax.activation.DataSource,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.glassfish.jersey.message.internal.FileProvider.writeTo(java.io.File,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.glassfish.jersey.message.internal.InputStreamProvider.writeTo(java.io.InputStream,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.glassfish.jersey.message.internal.ReaderProvider.writeTo(java.io.Reader,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.glassfish.jersey.message.internal.StringMessageProvider.writeTo(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.glassfish.jersey.message.internal.AbstractMessageReaderWriterProvider.writeToAsString(java.lang.String,java.io.OutputStream,javax.ws.rs.core.MediaType)",
                                                   "inherit": "false"}, {"source": "P2", "track": "true", "target": "",
                                                                         "value": "com.github.mustachejava.codes.ValueCode.execute(java.io.Writer,java.lang.String)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "javax.servlet.jsp.JspWriter.print(java.lang.String)",
                                                   "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                       "value": "javax.servlet.jsp.JspWriter.println(java.lang.String)",
                                                                       "inherit": "all"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "javax.servlet.jsp.JspWriter.write(java.lang.String)",
                                                   "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                       "value": "javax.servlet.jsp.JspWriter.write(java.lang.String,int,int)",
                                                                       "inherit": "all"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "javax.servlet.jsp.JspWriter.write(char[])",
                                                   "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                       "value": "javax.servlet.jsp.JspWriter.write(char[],int,int)",
                                                                       "inherit": "all"},
                                                  {"source": "P2,3", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.format(java.util.Locale,java.lang.String,java.lang.Object[])",
                                                   "inherit": "true"}, {"source": "P1,2", "track": "true", "target": "",
                                                                        "value": "java.io.PrintWriter.format(java.lang.String,java.lang.Object[])",
                                                                        "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.print(char[])", "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.print(java.lang.Object)",
                                                   "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                                        "value": "java.io.PrintWriter.print(java.lang.String)",
                                                                        "inherit": "true"},
                                                  {"source": "P2,3", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.printf(java.util.Locale,java.lang.String,java.lang.Object[])",
                                                   "inherit": "true"}, {"source": "P1,2", "track": "true", "target": "",
                                                                        "value": "java.io.PrintWriter.printf(java.lang.String,java.lang.Object[])",
                                                                        "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.println(char[])", "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.println(java.lang.Object)",
                                                   "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                                        "value": "java.io.PrintWriter.println(java.lang.String)",
                                                                        "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.write(char[])", "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.write(char[],int,int)",
                                                   "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                                        "value": "java.io.PrintWriter.write(java.lang.String)",
                                                                        "inherit": "true"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "java.io.PrintWriter.write(java.lang.String,int,int)",
                                                   "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                                        "value": "org.apache.tapestry5.internal.services.MarkupWriterImpl.writeRaw(java.lang.String)",
                                                                        "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "com.sun.faces.renderkit.html_basic.HtmlResponseWriter.write(java.lang.String)",
                                                   "inherit": "false"}, {"source": "P3", "track": "true", "target": "",
                                                                         "value": "org.mule.module.http.internal.domain.response.DefaultHttpResponse.<init>(org.mule.module.http.internal.domain.response.ResponseStatus,org.apache.commons.collections.MultiMap,org.mule.module.http.internal.domain.HttpEntity)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.mule.module.http.internal.domain.response.HttpResponseBuilder.setEntity(org.mule.module.http.internal.domain.HttpEntity)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.mule.module.http.internal.domain.response.HttpResponseBuilder.build(org.mule.module.http.internal.domain.HttpEntity)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.mule.transformer.simple.SetPayloadMessageProcessor.resolveDataType(org.mule.DefaultMuleEvent,java.lang.Object)",
                                                   "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "org.mule.transformer.simple.SetPayloadMessageProcessor.resolveDataType(org.mule.api.MuleEvent,java.lang.Object)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "true", "target": "",
                                                   "value": "org.apache.jasper.runtime.JspWriterImpl.println(java.lang.String)",
                                                   "inherit": "false"}], "enable": 0, "value": "reflected-xss",
                                      "type": 4}, {"details": [{"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.DocumentBuilder.parse(java.io.File)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.DocumentBuilder.parse(java.io.InputStream,java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.DocumentBuilder.parse(java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.DocumentBuilder.parse(org.xml.sax.InputSource)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.io.File)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.io.InputStream)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.io.InputStream,java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.io.Reader)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.io.Reader,java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "nu.xom.Builder.build(java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(java.io.InputStream)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(java.io.Reader)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.transform.Source,java.lang.Class)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(org.xml.sax.InputSource)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLStreamReader)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLStreamReader,java.lang.Class)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLEventReader)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.bind.Unmarshaller.unmarshal(javax.xml.stream.XMLEventReader,java.lang.Class)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(java.io.InputStream,org.xml.sax.HandlerBase)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(java.io.InputStream,org.xml.sax.HandlerBase,java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler,java.lang.String)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource,org.xml.sax.HandlerBase)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "javax.xml.parsers.SAXParser.parse(org.xml.sax.InputSource,org.xml.sax.helpers.DefaultHandler)",
                                                                "inherit": "true"},
                                                               {"source": "P1", "track": "true", "target": "",
                                                                "value": "org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)",
                                                                "inherit": "true"},
                                                               {"source": "O", "track": "true", "target": "",
                                                                "value": "javax.xml.stream.XMLStreamReader.getElementText()",
                                                                "inherit": "true"}], "enable": 1, "value": "xxe",
                                                   "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "javax.servlet.jsp.el.ExpressionEvaluator.evaluate(java.lang.String,java.lang.Class,javax.servlet.jsp.el.VariableResolver,javax.servlet.jsp.el.FunctionMapper)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "ognl.Ognl.getValue(java.lang.Object,java.util.Map,java.lang.Object)",
                                 "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                     "value": "ognl.Ognl.getValue(java.lang.Object,java.util.Map,java.lang.Object,java.lang.Class)",
                                                     "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                                                         "value": "ognl.Ognl.getValue(java.lang.String,java.util.Map,java.lang.Object)",
                                                                         "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "ognl.Ognl.getValue(java.lang.String,java.util.Map,java.lang.Object,java.lang.Class)",
             "inherit": "all"}, {"source": "P1", "track": "true", "target": "",
                                 "value": "ognl.Ognl.getValue(java.lang.Object,java.lang.Object)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "ognl.Ognl.getValue(java.lang.Object,java.lang.Object,java.lang.Class)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "ognl.Ognl.getValue(java.lang.String,java.lang.Object)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "ognl.Ognl.getValue(java.lang.String,java.lang.Object,java.lang.Class)", "inherit": "all"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.apache.commons.ognl.Ognl.parseExpression(java.lang.String)", "inherit": "all"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValue()", "inherit": "true"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValue(java.lang.Class)", "inherit": "true"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext)",
             "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                  "value": "org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext,java.lang.Class)",
                                  "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                                       "value": "org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext,java.lang.Object,java.lang.Class)",
                                                       "inherit": "true"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValue(org.springframework.expression.EvaluationContext,java.lang.Object)",
             "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                  "value": "org.springframework.expression.Expression.getValue(java.lang.Object)",
                                  "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                                       "value": "org.springframework.expression.Expression.getValue(java.lang.Object,java.lang.Class)",
                                                       "inherit": "true"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValueTypeDescriptor(java.lang.Object)",
             "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                  "value": "org.springframework.expression.Expression.getValueTypeDescriptor()",
                                  "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                                       "value": "org.springframework.expression.Expression.getValueTypeDescriptor(org.springframework.expression.EvaluationContext,java.lang.Object)",
                                                       "inherit": "true"},
            {"source": "O", "track": "true", "target": "",
             "value": "org.springframework.expression.Expression.getValueTypeDescriptor(org.springframework.expression.EvaluationContext)",
             "inherit": "true"}], "enable": 1, "value": "expression-language-injection", "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "java.util.regex.Pattern.matcher(java.lang.CharSequence)", "inherit": "false"},
            {"source": "P1", "track": "true", "target": "", "value": "jregex.Pattern.matcher(java.lang.String)",
             "inherit": "false"}], "enable": 1, "value": "redos", "type": 4}, {"details": [
            {"source": "P1", "track": "false", "target": "", "value": "java.lang.Class.forName(java.lang.String)",
             "inherit": "false"}, {"source": "P1", "track": "false", "target": "",
                                   "value": "java.lang.Class.forName(java.lang.String,boolean,java.lang.ClassLoader)",
                                   "inherit": "false"}], "enable": 1, "value": "reflection-injection", "type": 4}, {
                         "details": [
                             {"source": "O", "track": "true", "target": "", "value": "java.io.ObjectInput.readObject()",
                              "inherit": "true"}, {"source": "O", "track": "true", "target": "",
                                                   "value": "java.io.ObjectInputStream.readObject()", "inherit": "all"},
                             {"source": "P1", "track": "true", "target": "",
                              "value": "com.thoughtworks.xstream.XStream.fromXML(java.lang.String)",
                              "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                    "value": "com.thoughtworks.xstream.XStream.fromXML(java.lang.String,java.lang.Object)",
                                                    "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                          "value": "com.thoughtworks.xstream.XStream.fromXML(java.io.Reader)",
                                                                          "inherit": "false"},
                             {"source": "P1", "track": "true", "target": "",
                              "value": "com.thoughtworks.xstream.XStream.fromXML(java.io.Reader,java.lang.Object)",
                              "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                    "value": "com.thoughtworks.xstream.XStream.fromXML(java.io.InputStream)",
                                                    "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                          "value": "com.thoughtworks.xstream.XStream.fromXML(java.io.InputStream,java.lang.Object)",
                                                                          "inherit": "false"},
                             {"source": "P1", "track": "true", "target": "",
                              "value": "com.thoughtworks.xstream.XStream.fromXML(java.net.URL)", "inherit": "false"},
                             {"source": "P1", "track": "true", "target": "",
                              "value": "com.thoughtworks.xstream.XStream.fromXML(java.net.URL,java.lang.Object)",
                              "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                    "value": "com.esotericsoftware.kryo.Kryo.readObject(com.esotericsoftware.kryo.io.Input,java.lang.Class)",
                                                    "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                          "value": "com.esotericsoftware.kryo.Kryo.readObjectOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class)",
                                                                          "inherit": "false"},
                             {"source": "P1", "track": "true", "target": "",
                              "value": "com.esotericsoftware.kryo.Kryo.readObject(com.esotericsoftware.kryo.io.Input,java.lang.Class,com.esotericsoftware.kryo.Serializer)",
                              "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                    "value": "com.esotericsoftware.kryo.Kryo.readObjectOrNull(com.esotericsoftware.kryo.io.Input,java.lang.Class,com.esotericsoftware.kryo.Serializer)",
                                                    "inherit": "false"}, {"source": "P1", "track": "true", "target": "",
                                                                          "value": "com.esotericsoftware.kryo.Kryo.readClassAndObject(com.esotericsoftware.kryo.io.Input)",
                                                                          "inherit": "false"}], "enable": 1,
                         "value": "unsafe-json-deserialize", "type": 4}, {"details": [
            {"source": "P2", "track": "true", "target": "",
             "value": "org.hibernate.Session.createFilter(java.lang.Object,java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.hibernate.Session.createQuery(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.hibernate.Session.createSQLQuery(java.lang.String,java.lang.String,java.lang.Class)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "org.hibernate.Session.createSQLQuery(java.lang.String,java.lang.String[],java.lang.Class[])",
                                  "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                       "value": "org.hibernate.Session.createSQLQuery(java.lang.String)",
                                                       "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "org.hibernate.Session.delete(java.lang.String)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "org.hibernate.Session.delete(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
                                  "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                       "value": "org.hibernate.Session.delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
                                                       "inherit": "true"},
            {"source": "P2", "track": "true", "target": "",
             "value": "org.hibernate.Session.filter(java.lang.Object,java.lang.String)", "inherit": "true"},
            {"source": "P2", "track": "true", "target": "",
             "value": "org.hibernate.Session.filter(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.type.Type)",
             "inherit": "true"}, {"source": "P2", "track": "true", "target": "",
                                  "value": "org.hibernate.Session.filter(java.lang.Object,java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
                                  "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "org.hibernate.Session.find(java.lang.String)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "org.hibernate.Session.find(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
                                  "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                       "value": "org.hibernate.Session.find(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
                                                       "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "org.hibernate.Session.iterate(java.lang.String)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "org.hibernate.Session.iterate(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
                                  "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                       "value": "org.hibernate.Session.iterate(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
                                                       "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.hibernate.SharedSessionContract.createQuery(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "org.hibernate.SharedSessionContract.createSQLQuery(java.lang.String)", "inherit": "true"}],
                         "enable": 1, "value": "hql-injection",
                         "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "com.mongodb.DB.doEval(java.lang.String,java.lang.Object[])", "inherit": "true"}], "enable": 1,
                         "value": "nosql-injection",
                         "type": 4}, {"details": [
            {"source": "O", "track": "true", "target": "", "value": "java.io.BufferedReader.readLine()",
             "inherit": "true"}], "enable": 1, "value": "unsafe-readline", "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "",
             "value": "javax.servlet.jsp.PageContext.forward(java.lang.String)", "inherit": "false"}], "enable": 1,
                         "value": "unvalidated-forward",
                         "type": 4}, {"details": [
            {"source": "P1", "track": "true", "target": "",
             "value": "org.glassfish.grizzly.http.server.Response.sendRedirect(java.lang.String)", "inherit": "true"},
            {"source": "P1", "track": "true", "target": "", "value": "play.mvc.Results.redirect(java.lang.String)",
             "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                  "value": "javax.ws.rs.core.Response.temporaryRedirect(java.net.URI)",
                                  "inherit": "true"}, {"source": "P1", "track": "true", "target": "",
                                                       "value": "javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)",
                                                       "inherit": "true"},
            {"source": "P2", "track": "true", "target": "",
             "value": "javax.servlet.http.HttpServletResponse.setHeader(java.lang.String,java.lang.String)",
             "inherit": "true"}, {"source": "P2", "track": "true", "target": "",
                                  "value": "io.netty.handler.codec.http.DefaultHttpHeaders.add0(int,int,java.lang.CharSequence,java.lang.CharSequence)",
                                  "inherit": "true"}, {"source": "P2", "track": "true", "target": "",
                                                       "value": "javax.servlet.http.HttpServletResponse.addHeader(java.lang.String,java.lang.String)",
                                                       "inherit": "true"}], "enable": 1,
                         "value": "unvalidated-redirect",
                         "type": 4}, {
                         "details": [{"source": "P1,2", "track": "true", "target": "",
                                      "value": "javax.servlet.http.HttpServletResponse.setHeader(java.lang.String,java.lang.String)",
                                      "inherit": "false"}, {"source": "P1,2", "track": "true", "target": "",
                                                            "value": "javax.servlet.http.HttpServletResponse.addHeader(java.lang.String,java.lang.String)",
                                                            "inherit": "false"},
                                     {"source": "P1,2", "track": "true", "target": "",
                                      "value": "javax.ws.rs.core.Response$ResponseBuilder.header(java.lang.String,java.lang.Object)",
                                      "inherit": "false"}], "enable": 0, "value": "header-injection", "type": 4}, {
                         "details": [{"source": "P2", "track": "true", "target": "",
                                      "value": "java.lang.Runtime.load0(java.lang.Class,java.lang.String)",
                                      "inherit": "false"}], "enable": 1, "value": "dynamic-library-load", "type": 4}, {
                         "details": [{"source": "P1", "track": "true", "target": "",
                                      "value": "org.springframework.core.io.FileUrlResource.createRelative(java.lang.String)",
                                      "inherit": "false"}], "enable": 1, "value": "spring-cloud-config-server",
                         "type": 4}, {"details": [{"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.jdbc.MysqlIO.sqlQueryDirect(com.mysql.jdbc.StatementImpl,java.lang.String,java.lang.String,com.mysql.jdbc.Buffer,int,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[])",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.NativeSession.execSQL(com.mysql.cj.Query,java.lang.String,int,com.mysql.cj.protocol.a.NativePacketPayload,boolean,com.mysql.cj.protocol.ProtocolEntityFactory,com.mysql.cj.protocol.ColumnDefinition,boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.NativeSession.execSQL(com.mysql.cj.Query,java.lang.String,int,com.mysql.cj.protocol.a.NativePacketPayload,boolean,com.mysql.cj.protocol.ProtocolEntityFactory,java.lang.String,com.mysql.cj.protocol.ColumnDefinition,boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.fabric.jdbc.FabricMySQLConnectionProxy.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[])",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.fabric.jdbc.FabricMySQLConnectionProxy.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[],boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ConnectionImpl.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ConnectionImpl.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition,boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ConnectionImpl.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[])",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ConnectionImpl.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[],boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ConnectionWrapper.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ConnectionWrapper.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition,boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ConnectionWrapper.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[])",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ConnectionWrapper.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[],boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ha.MultiHostMySQLConnection.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ha.MultiHostMySQLConnection.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition,boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.jdbc.ha.MultiHostMySQLConnection.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[])",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.cj.jdbc.ha.MultiHostMySQLConnection.execSQL(com.mysql.cj.jdbc.StatementImpl,java.lang.String,int,com.mysql.cj.mysqla.io.Buffer,int,int,boolean,java.lang.String,com.mysql.cj.core.result.Field[],boolean)",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.cj.mysqla.MysqlaSession.execSQL(com.mysql.cj.api.Query,java.lang.String,int,com.mysql.cj.api.mysqla.io.PacketPayload,boolean,com.mysql.cj.api.mysqla.io.ProtocolEntityFactory,java.lang.String,com.mysql.cj.api.mysqla.result.ColumnDefinition,boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.fabric.jdbc.FabricMySQLConnectionProxy.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[])",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.fabric.jdbc.FabricMySQLConnectionProxy.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[],boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "java.sql.Connection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[])",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "java.sql.Connection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[],boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.jdbc.LoadBalancedMySQLConnection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[])",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.jdbc.LoadBalancedMySQLConnection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[],boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P4", "track": "false", "target": "",
                                                   "value": "com.mysql.jdbc.MultiHostMySQLConnection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[])",
                                                   "inherit": "false"}, {"source": "P4", "track": "false", "target": "",
                                                                         "value": "com.mysql.jdbc.MultiHostMySQLConnection.execSQL(com.mysql.jdbc.StatementImpl,java.lang.String,int,com.mysql.jdbc.Buffer,int,int,boolean,java.lang.String,com.mysql.jdbc.Field[],boolean)",
                                                                         "inherit": "false"},
                                                  {"source": "P1,2", "track": "false", "target": "",
                                                   "value": "org.postgresql.jdbc.PgStatement.executeInternal(org.postgresql.core.CachedQuery,org.postgresql.core.ParameterList,int)",
                                                   "inherit": "false"},
                                                  {"source": "P1,2", "track": "false", "target": "",
                                                   "value": "org.postgresql.core.v3.QueryExecutorImpl.sendParse(org.postgresql.core.v3.SimpleQuery,org.postgresql.core.v3.SimpleParameterList,boolean)",
                                                   "inherit": "false"}, {"source": "P1", "track": "false", "target": "",
                                                                         "value": "com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(com.microsoft.sqlserver.jdbc.TDSCommand)",
                                                                         "inherit": "false"},
                                                  {"source": "P1", "track": "false", "target": "",
                                                   "value": "com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(com.microsoft.sqlserver.jdbc.TDSCommand)",
                                                   "inherit": "false"}], "enable": 1, "value": "sql-over-power",
                                      "type": 4}, {"details": [{"source": "", "track": "", "target": "",
                                                                "value": "org.springframework.web.util.HtmlUtils.htmlEscape(java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.springframework.web.util.HtmlUtils.htmlEscape(java.lang.String,java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.springframework.web.util.HtmlUtils.htmlEscapeDecimal(java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.springframework.web.util.HtmlUtils.htmlEscapeDecimal(java.lang.String,java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.apache.commons.lang.StringEscapeUtils.escapeHtml(java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.apache.commons.lang.StringEscapeUtils.escapeHtml(java.io.Writer,java.lang.String)",
                                                                "inherit": "false"},
                                                               {"source": "", "track": "", "target": "",
                                                                "value": "org.owasp.esapi.reference.DefaultEncoder.encodeForHTML(java.lang.String)",
                                                                "inherit": "false"}], "enable": 1,
                                                   "value": "reflected-xss-filter", "type": 3}, {"details": [
            {"source": "", "track": "", "target": "",
             "value": "javax.xml.parsers.DocumentBuilderFactory.setFeature(java.lang.String, boolean)",
             "inherit": "true"}, {"source": "", "track": "", "target": "",
                                  "value": "javax.xml.parsers.SAXParserFactory.setFeature(java.lang.String, boolean)",
                                  "inherit": "true"}, {"source": "", "track": "", "target": "",
                                                       "value": "org.xml.sax.XMLReader.setFeature(java.lang.String, boolean)",
                                                       "inherit": "true"}, {"source": "", "track": "", "target": "",
                                                                            "value": "javax.xml.transform.TransformerFactory.setFeature(java.lang.String, boolean)",
                                                                            "inherit": "true"},
            {"source": "", "track": "", "target": "",
             "value": "com.sun.org.apache.xerces.internal.xni.parser.XMLParserConfiguration.setFeature(java.lang.String, boolean)",
             "inherit": "true"}, {"source": "", "track": "", "target": "",
                                  "value": "com.sun.org.apache.xerces.internal.xni.grammars.XMLGrammarLoader.setFeature(java.lang.String, boolean)",
                                  "inherit": "true"}], "enable": 1, "value": "xxe-filter", "type": 3}]
        for _strategy in strategys:
            data = {}
            data['type'] = _strategy['type']
            data['value'] = _strategy['value']
            data['enable'] = _strategy['enable']
            details = _strategy['details']
            print(data)
            strategy_type, status = IastHookStrategyType.objects.get_or_create(**data)
            for detail in details:
                strategy, status = IastHookStrategy.objects.get_or_create(**detail)
                strategy.create_time = int(time.time())
                strategy.update_time = int(time.time())
                strategy.created_by = 1
                strategy.save()
                IastHookStrategyTypeRelation(strategy=strategy, type=strategy_type).save()
            # strategy, status = IastHookStrategyType.objects.get_or_create(**_strategy)
            # strategy.create_time = int(time.time())
            # strategy.update_time = int(time.time())
            # strategy.created_by = 1
            # strategy.save()
        return JsonResponse({})
